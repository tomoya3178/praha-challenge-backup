課題
https://airtable.com/appj4zNpELn8w279r/tblg8ePOEQRDtIGiY/viwV3pAlEvPOOgmHF/recDurRgYRnFiDTt1?blocks=hide


回答1
XSS
罠ページや罠リンクによりスクリプトを含む文字列がサーバーに送信された結果、
スクリプトを含むWebページが表示され、
利用者のブラウザ上で実行されたスクリプトによってクッキー情報等が漏洩する
出力する全ての要素に対してエスケープ処理をする
URLを出力する際は「http://」や「https://」で始まるURLのみを許可する
スクリプトタグ内を動的に生成しない
スタイルシートを任意のサイトから取り込めるようにしない

コマンドインジェクション
リクエストに含まれるコマンドによりサーバーが操作される
シェルを起動できる言語機能の利用を避ける
シェルを起動できる言語機能を利用する場合はその引数を構成する全ての変数に対してチェックを行いあらかじめ許可した処理のみを実行する

SQLインジェクション
リクエストに含まれるSQL文の要素によりDBが操作される
SQL文の組み立ては全てプレースホルダで実装する
SQL文の組み立てを文字列連結により行う場合はエスケープ処理等を行うデータベースエンジンのAPIを用いてSQL文のリテラルを正しく構成する
パラメータにSQL文を直接指定しない

CSRF
ログインした状態で罠ページや罠リンクにより意図しないリクエストが送信される
処理を実行するページをPOSTメソッドでアクセスするようにし、その「hiddenパラメータ」に秘密情報が挿入されるよう、前のページを自動生成して、実行ページではその値が正しい場合のみ処理を実行する
処理を実行する直前のページで再度パスワードの入力を求め、実行ページでは再度入力されたパスワードが正しい場合のみ処理を実行する
Refererが正しいリンク元である場合のみ処理を実行する


回答2
課題1以外の脆弱性とその対策について教えてください


回答3
回答1参照


参考
https://www.ipa.go.jp/security/vuln/websecurity.html
