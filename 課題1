課題1

・Host
 リクエストが送信される先のサーバーのホスト名とポート番号の指定

・Content-type
リクエストにおいては、クライアントがサーバーにどのような種類のデータが実際に送られたか
レスポンスにおいては、クライアントに返されたコンテンツが実際にはどのような種類のものであるか

・User-agent
サーバーやネットワークピアがアプリケーション、オペレーティングシステム、ベンダーや、リクエストしているユーザーエージェントのバージョン等を識別できるようにする特性文字列

・Accept
クライアントが理解できるコンテンツタイプのMIMEタイプ
サーバーはAcceptに応じた選択をContent-typeに指定

・Referer
現在リクエストされているページへのリンク先を持った直前のウェブページのアドレス

・Accept-Encoding
圧縮アルゴリズムのどれをクライアントが理解することができるか

・Authorization
ユーザーエージェントがサーバーから認証を受けるための証明書を保持

・Location
リダイレクト先のURL

refererを送信しない
refererによってリンク先からリンク元に干渉できてしまう
noopenerで事足りるが、Edge等の一部ブラウザにおいてサポートされていない
オリジンはウェブコンテンツにアクセスするために使われるURLのスキーム（プロトコル）、ホスト（ドメイン）、ポートによって定義される
どこがフェッチの原点であるかを示し、パス情報は含まれず、サーバー名のみが含まれる
Referrer-Policy: origin-when-cross-origin


課題2

ローカルキャッシュのデータが更新されていないか確認するためのヘッダ名
ヘッダを用いたグローリング対策の一例


参考

https://developer.mozilla.org/ja/docs/Web/HTTP/Headers
https://webtan.impress.co.jp/e/2009/03/27/4952
https://webtan.impress.co.jp/e/2010/01/12/7156
https://qiita.com/TeruhisaFukumoto/items/eeabfc838eea1ed65023
